#pragma once

#include <stdio.h>
#include <iostream>
#include <string>

using namespace std;

const bool DEBUG_MODE = false;   //debug_modeがtrueかfalseか

/*
   A  B  C
  ---------
1| 0  1  2 |
2| 3  4  5 |
3| 6  7  8 |
4| 9 10 11 |
  ---------
  駒台(共通)：12
*/

enum{
	BLACK,		//先手＝黒(0)
	WHITE,		//後手＝白(1)
	ANYCOLOR,   //先手後手どちらでも(2)

	COLUMN = 3,	//横のマスの数
	ROW    = 4,	//縦のマスの数
	NUM_MASU = COLUMN * ROW,	//マスの数
};

enum PIECE{
	HIYOKO,		//ひよこ(0)
	ZOU,		//ゾウ(1)
	KIRIN,		//キリン(2)
	LION,		//ライオン(3)
	CHICKEN,	//にわとり(4)

	NARI = CHICKEN - HIYOKO,	//成り(4)

	BLP = 0,		//先手(BLACK)の駒の目印 BLackPieceの略
	WHP = 5,		//後手(WHITE)の駒の目印 WHitePieceの略

	B_HIYOKO  = BLP + HIYOKO,	//0
	B_ZOU     = BLP + ZOU,		//1
	B_KIRIN   = BLP + KIRIN,	//2
	B_LION    = BLP + LION,		//3
	B_CHICKEN = BLP + CHICKEN,	//4
	
	W_HIYOKO  = WHP + HIYOKO,	//5
	W_ZOU     = WHP + ZOU,		//6
	W_KIRIN   = WHP + KIRIN,	//7
	W_LION    = WHP + LION,		//8
	W_CHICKEN = WHP + CHICKEN,	//9

	EMPTY = 10,		//空マス(10)
	NONE  = 16,     //
	YES   = 32,     //
	MATTA = 33,
};

enum{
	HUMAN = 1,
	COMPUTER = 2,

};


//マスの表示に使用
const string PRINT_BAN[11] = {"BH","BZ","BK","BL","BC","WH","WZ","WK","WL","WC","  "};

//各駒の動けるマス[駒の種類][マスの位置][動ける数(前から最大8マス、9番目は動けるマスの数)]
const int CANMOVE[10][NUM_MASU][9] = {   
	{{-1,-1,-1,-1,-1,-1,-1,-1,0},{-1,-1,-1,-1,-1,-1,-1,-1,0},{-1,-1,-1,-1,-1,-1,-1,-1,0},   //[B_HIYOKO][0,1,2]
	 { 0,-1,-1,-1,-1,-1,-1,-1,1},{ 1,-1,-1,-1,-1,-1,-1,-1,1},{ 2,-1,-1,-1,-1,-1,-1,-1,1},   //[B_HIYOKO][3,4,5]
	 { 3,-1,-1,-1,-1,-1,-1,-1,1},{ 4,-1,-1,-1,-1,-1,-1,-1,1},{ 5,-1,-1,-1,-1,-1,-1,-1,1},   //[B_HIYOKO][6,7,8]
	 { 6,-1,-1,-1,-1,-1,-1,-1,1},{ 7,-1,-1,-1,-1,-1,-1,-1,1},{ 8,-1,-1,-1,-1,-1,-1,-1,1}},  //[B_HIYOKO][9,10,11]

	{{ 4,-1,-1,-1,-1,-1,-1,-1,1},{ 3, 5,-1,-1,-1,-1,-1,-1,2},{ 4,-1,-1,-1,-1,-1,-1,-1,1},   //[B_ZOU][0,1,2]
	 { 1, 7,-1,-1,-1,-1,-1,-1,2},{ 0, 2, 6, 8,-1,-1,-1,-1,4},{ 1, 7,-1,-1,-1,-1,-1,-1,2},   //[B_ZOU][3,4,5]
	 { 4,10,-1,-1,-1,-1,-1,-1,2},{ 3, 5, 9,11,-1,-1,-1,-1,4},{ 4,10,-1,-1,-1,-1,-1,-1,2},   //[B_ZOU][6,7,8]
	 { 7,-1,-1,-1,-1,-1,-1,-1,1},{ 6, 8,-1,-1,-1,-1,-1,-1,2},{ 7,-1,-1,-1,-1,-1,-1,-1,1}},  //[B_ZOU][9,10,11]

	{{ 1, 3,-1,-1,-1,-1,-1,-1,2},{ 0, 2, 4,-1,-1,-1,-1,-1,3},{ 1, 5,-1,-1,-1,-1,-1,-1,2},   //[B_KIRIN][0,1,2]
	 { 0, 4, 6,-1,-1,-1,-1,-1,3},{ 1, 3, 5, 7,-1,-1,-1,-1,4},{ 2, 4, 8,-1,-1,-1,-1,-1,3},   //[B_KIRIN][3,4,5]
	 { 3, 7, 9,-1,-1,-1,-1,-1,3},{ 4, 6, 8,10,-1,-1,-1,-1,4},{ 5, 7,11,-1,-1,-1,-1,-1,3},   //[B_KIRIN][6,7,8]
	 { 6,10,-1,-1,-1,-1,-1,-1,2},{ 7, 9,11,-1,-1,-1,-1,-1,3},{ 8,10,-1,-1,-1,-1,-1,-1,2}},  //[B_KIRIN][9,10,11]

	{{ 1, 3, 4,-1,-1,-1,-1,-1,3},{ 0, 2, 3, 4, 5,-1,-1,-1,5},{ 1, 4, 5,-1,-1,-1,-1,-1,3},   //[B_LION][0,1,2]
	 { 0, 1, 4, 6, 7,-1,-1,-1,5},{ 0, 1, 2, 3, 5, 6, 7, 8,8},{ 1, 2, 4, 7, 8,-1,-1,-1,5},   //[B_LION][3,4,5]
	 { 3, 4, 7, 9,10,-1,-1,-1,5},{ 3, 4, 5, 6, 8, 9,10,11,8},{ 4, 5, 7,10,11,-1,-1,-1,5},   //[B_LION][6,7,8]
	 { 6, 7,10,-1,-1,-1,-1,-1,3},{ 6, 7, 8, 9,11,-1,-1,-1,5},{ 7, 8,10,-1,-1,-1,-1,-1,3}},  //[B_LION][9,10,11]
	
	{{ 1, 3,-1,-1,-1,-1,-1,-1,2},{ 0, 2, 4,-1,-1,-1,-1,-1,3},{ 1, 5,-1,-1,-1,-1,-1,-1,2},   //[B_CHICKEN][0,1,2]
	 { 0, 1, 4, 6,-1,-1,-1,-1,4},{ 0, 1, 2, 3, 5, 7,-1,-1,6},{ 1, 2, 4, 8,-1,-1,-1,-1,4},   //[B_CHICKEN][3,4,5]
	 { 3, 4, 7, 9,-1,-1,-1,-1,4},{ 3, 4, 5, 6, 8,10,-1,-1,6},{ 4, 5, 7,11,-1,-1,-1,-1,4},   //[B_CHICKEN][6,7,8]
	 { 6, 7,10,-1,-1,-1,-1,-1,3},{ 6, 7, 8, 9,11,-1,-1,-1,5},{ 7, 8,10,-1,-1,-1,-1,-1,3}},  //[B_CHICKEN][9,10,11]

	{{ 3,-1,-1,-1,-1,-1,-1,-1,1},{ 4,-1,-1,-1,-1,-1,-1,-1,1},{ 5,-1,-1,-1,-1,-1,-1,-1,1},   //[W_HIYOKO][0,1,2]
	 { 6,-1,-1,-1,-1,-1,-1,-1,1},{ 7,-1,-1,-1,-1,-1,-1,-1,1},{ 8,-1,-1,-1,-1,-1,-1,-1,1},   //[W_HIYOKO][3,4,5]
	 { 9,-1,-1,-1,-1,-1,-1,-1,1},{10,-1,-1,-1,-1,-1,-1,-1,1},{11,-1,-1,-1,-1,-1,-1,-1,1},   //[W_HIYOKO][6,7,8]
	 {-1,-1,-1,-1,-1,-1,-1,-1,0},{-1,-1,-1,-1,-1,-1,-1,-1,0},{-1,-1,-1,-1,-1,-1,-1,-1,0}},  //[W_HIYOKO][9,10,11]

	{{ 4,-1,-1,-1,-1,-1,-1,-1,1},{ 3, 5,-1,-1,-1,-1,-1,-1,2},{ 4,-1,-1,-1,-1,-1,-1,-1,1},   //[W_ZOU][0,1,2]
	 { 1, 7,-1,-1,-1,-1,-1,-1,2},{ 0, 2, 6, 8,-1,-1,-1,-1,4},{ 1, 7,-1,-1,-1,-1,-1,-1,2},   //[W_ZOU][3,4,5]
	 { 4,10,-1,-1,-1,-1,-1,-1,2},{ 3, 5, 9,11,-1,-1,-1,-1,4},{ 4,10,-1,-1,-1,-1,-1,-1,2},   //[W_ZOU][6,7,8]
	 { 7,-1,-1,-1,-1,-1,-1,-1,1},{ 6, 8,-1,-1,-1,-1,-1,-1,2},{ 7,-1,-1,-1,-1,-1,-1,-1,1}},  //[W_ZOU][9,10,11]

	{{ 1, 3,-1,-1,-1,-1,-1,-1,2},{ 0, 2, 4,-1,-1,-1,-1,-1,3},{ 1, 5,-1,-1,-1,-1,-1,-1,2},   //[W_KIRIN][0,1,2]
	 { 0, 4, 6,-1,-1,-1,-1,-1,3},{ 1, 3, 5, 7,-1,-1,-1,-1,4},{ 2, 4, 8,-1,-1,-1,-1,-1,3},   //[W_KIRIN][3,4,5]
	 { 3, 7, 9,-1,-1,-1,-1,-1,3},{ 4, 6, 8,10,-1,-1,-1,-1,4},{ 5, 7,11,-1,-1,-1,-1,-1,3},   //[W_KIRIN][6,7,8]
	 { 6,10,-1,-1,-1,-1,-1,-1,2},{ 7, 9,11,-1,-1,-1,-1,-1,3},{ 8,10,-1,-1,-1,-1,-1,-1,2}},  //[W_KIRIN][9,10,11]

	{{ 1, 3, 4,-1,-1,-1,-1,-1,3},{ 0, 2, 3, 4, 5,-1,-1,-1,5},{ 1, 4, 5,-1,-1,-1,-1,-1,3},   //[W_LION][0,1,2]
	 { 0, 1, 4, 6, 7,-1,-1,-1,5},{ 0, 1, 2, 3, 5, 6, 7, 8,8},{ 1, 2, 4, 7, 8,-1,-1,-1,5},   //[W_LION][3,4,5]
	 { 3, 4, 7, 9,10,-1,-1,-1,5},{ 3, 4, 5, 6, 8, 9,10,11,8},{ 4, 5, 7,10,11,-1,-1,-1,5},   //[W_LION][6,7,8]
	 { 6, 7,10,-1,-1,-1,-1,-1,3},{ 6, 7, 8, 9,11,-1,-1,-1,5},{ 7, 8,10,-1,-1,-1,-1,-1,3}},  //[W_LION][9,10,11]
	 
	{{ 1, 3, 4,-1,-1,-1,-1,-1,3},{ 0, 2, 3, 4, 5,-1,-1,-1,5},{ 1, 4, 5,-1,-1,-1,-1,-1,3},   //[W_CHICKEN][0,1,2]
	 { 0, 4, 6, 7,-1,-1,-1,-1,4},{ 1, 3, 5, 6, 7, 8,-1,-1,6},{ 2, 4, 7, 8,-1,-1,-1,-1,4},   //[W_CHICKEN][3,4,5]
	 { 3, 7, 9,10,-1,-1,-1,-1,4},{ 4, 6, 8, 9,10,11,-1,-1,6},{ 5, 7,10,11,-1,-1,-1,-1,4},   //[W_CHICKEN][6,7,8]
	 { 6,10,-1,-1,-1,-1,-1,-1,2},{ 7, 9,11,-1,-1,-1,-1,-1,3},{ 8,10,-1,-1,-1,-1,-1,-1,2}}   //[W_CHICKEN][9,10,11]
};

//checkしている駒の可否[LIONのcolor][相手の位置-自分の位置+OFSET_SRRND][駒の種類]
const int OFSET_SRRND = 4;   //相手の位置-自分の位置の時のオフセット(ex.自分がB2,相手がA1にいたら0-4+OFSET_SRRND)
const bool IS_CHECK[2][9][10] =   //checkしている駒の可否
{
	{
		{0,0,0,0,0,0,1,0,1,1},{0,0,0,0,0,1,0,1,1,1},{0,0,0,0,0,0,1,0,1,1},
		{0,0,0,0,0,0,0,1,1,1},{0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,1,1,1},
		{0,0,0,0,0,0,1,0,1,0},{0,0,0,0,0,0,0,1,1,1},{0,0,0,0,0,0,1,0,1,0}
	},
	{
		{0,1,0,1,0,0,0,0,0,0},{0,0,0,0,0,0,0,1,1,1},{0,1,0,1,0,0,0,0,0,0},
		{0,0,1,1,1,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,0,0,0,0,0},
		{0,1,0,1,1,0,0,0,0,0},{1,0,1,1,1,0,0,0,0,0},{0,1,0,1,1,0,0,0,0,0}
	}
};